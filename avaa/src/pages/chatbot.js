import React from "react";
import Head from "next/head";
import useWebSocket from './utils/useWebSocket';


const Chatbot = () => {
  const [isLoading, setIsLoading] = React.useState(false);
  const [error, setError] = React.useState(false);

  const [userInput, setUserInput] = React.useState('');
  const { messages, sendMessage } = useWebSocket();
  
  const handleSubmit = (e) => {
    e.preventDefault();
    sendMessage(userInput);
    setUserInput('');
  };

  const scrollToBottom = () => {
    const chatLog = document.getElementById('chat-log');
    chatLog.scrollTop = chatLog.scrollHeight;
  };

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>Error...</div>;

  return (
    <>
      <Head>
        <title>AVAA</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
          integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
          crossorigin="anonymous"
        />
      </Head>

      <main className="index-main">
      <div>
      <h1>Chatbot</h1>
      <div id="chat-container">
        <div id="chat-log" style={{ height: '300px', overflowY: 'scroll', border: '1px solid #ccc', padding: '10px' }}>
          {messages.map((message, index) => (
            <div key={index}>{`${message.sender}: ${message.text}`}</div>
          ))}
        </div>
        <form onSubmit={handleSubmit}>
          <input type="text" value={userInput} onChange={(e) => setUserInput(e.target.value)} />
          <button type="submit">Send</button>
        </form>
      </div>
      <div style={{ marginTop: '20px' }}>
        <h2>Chatbot Replies in Paragraph Format</h2>
        <p>
          {messages
            .filter((message) => message.sender === 'chatbot')
            .map((message, index) => message.text)
            .join(' ')}
        </p>
      </div>
    </div>
      </main>
    </>
  );
}

export default Chatbot;